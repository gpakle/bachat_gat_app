import streamlit as st
from utils import *
from streamlit_option_menu import option_menu

# Page configuration
st.set_page_config(
    page_title="‡§¨‡§ö‡§§ ‡§ó‡§ü ‡§µ‡•ç‡§Ø‡§µ‡§∏‡•ç‡§•‡§æ‡§™‡§®",
    page_icon="üí∞",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Initialize session state for authentication
if 'logged_in' not in st.session_state:
    st.session_state.logged_in = False
if 'user' not in st.session_state:
    st.session_state.user = None
if 'current_cycle' not in st.session_state:
    st.session_state.current_cycle = get_current_cycle()

# Custom CSS
st.markdown("""
<style>
    .main-header {
        font-size: 3rem;
        color: #2E86AB;
        text-align: center;
        margin-bottom: 2rem;
    }
    .metric-card {
        background-color: #f0f2f6;
        padding: 1.5rem;
        border-radius: 0.5rem;
        text-align: center;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    .metric-value {
        font-size: 2rem;
        font-weight: bold;
        color: #2E86AB;
    }
    .metric-label {
        font-size: 1rem;
        color: #7f8c8d;
    }
</style>
""", unsafe_allow_html=True)

# Login Section
if not st.session_state.logged_in:
    st.markdown('<h1 class="main-header">‡§¨‡§ö‡§§ ‡§ó‡§ü ‡§µ‡•ç‡§Ø‡§µ‡§∏‡•ç‡§•‡§æ‡§™‡§® ‡§™‡•ç‡§∞‡§£‡§æ‡§≤‡•Ä</h1>', unsafe_allow_html=True)
    
    col1, col2, col3 = st.columns([1, 2, 1])
    with col2:
        with st.form("login_form"):
            st.subheader("‡§≤‡•â‡§ó‡§ø‡§® ‡§ï‡§∞‡§æ")
            email = st.text_input("‡§à‡§Æ‡•á‡§≤")
            password = st.text_input("‡§™‡§æ‡§∏‡§µ‡§∞‡•ç‡§°", type="password")
            login_button = st.form_submit_button("‡§≤‡•â‡§ó‡§ø‡§®")
            
            if login_button:
                user = login_user(email, password)
                if user:
                    st.session_state.logged_in = True
                    st.session_state.user = user
                    st.success("‡§Ø‡§∂‡§∏‡•ç‡§µ‡•Ä‡§∞‡•Ä‡§§‡•ç‡§Ø‡§æ ‡§≤‡•â‡§ó‡§ø‡§® ‡§ï‡•á‡§≤‡•á!")
                    st.rerun()
                else:
                    st.error("‡§Ö‡§µ‡•à‡§ß ‡§à‡§Æ‡•á‡§≤ ‡§ï‡§ø‡§Ç‡§µ‡§æ ‡§™‡§æ‡§∏‡§µ‡§∞‡•ç‡§°.")

# Main Application
else:
    # Sidebar with navigation
    with st.sidebar:
        st.title(f"‡§®‡§Æ‡§∏‡•ç‡§ï‡§æ‡§∞, {st.session_state.user['full_name']}")
        
        # Navigation menu
        selected = option_menu(
            menu_title="‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§Æ‡•á‡§®‡•Ç",
            options=["‡§°‡•Ö‡§∂‡§¨‡•ã‡§∞‡•ç‡§°", "‡§∏‡§¶‡§∏‡•ç‡§Ø", "‡§Ø‡•ã‡§ó‡§¶‡§æ‡§®", "‡§â‡§ß‡§æ‡§∞", "‡§Æ‡•Ä‡§ü‡§ø‡§Ç‡§ó", "‡§ú‡•Å‡§≤‡•á‡§¨‡•Ä", "‡§Ö‡§π‡§µ‡§æ‡§≤"],
            icons=["house", "people", "cash-coin", "bank", "calendar-event", "exclamation-circle", "bar-chart"],
            menu_icon="cast",
            default_index=0,
        )
        
        # Logout button
        if st.button("‡§≤‡•â‡§ó‡§Ü‡§â‡§ü"):
            st.session_state.logged_in = False
            st.session_state.user = None
            st.rerun()
    
    # Load the selected page
    if selected == "‡§°‡•Ö‡§∂‡§¨‡•ã‡§∞‡•ç‡§°":
        from pages import 1_‡§°‡•Ö‡§∂‡§¨‡•ã‡§∞‡•ç‡§°
        1_‡§°‡•Ö‡§∂‡§¨‡•ã‡§∞‡•ç‡§°.app()
    elif selected == "‡§∏‡§¶‡§∏‡•ç‡§Ø":
        from pages import 2_‡§∏‡§¶‡§∏‡•ç‡§Ø
        2_‡§∏‡§¶‡§∏‡•ç‡§Ø.app()
    elif selected == "‡§Ø‡•ã‡§ó‡§¶‡§æ‡§®":
        from pages import 3_‡§Ø‡•ã‡§ó‡§¶‡§æ‡§®
        3_‡§Ø‡•ã‡§ó‡§¶‡§æ‡§®.app()
    elif selected == "‡§â‡§ß‡§æ‡§∞":
        from pages import 4_‡§â‡§ß‡§æ‡§∞
        4_‡§â‡§ß‡§æ‡§∞.app()
    elif selected == "‡§Æ‡•Ä‡§ü‡§ø‡§Ç‡§ó":
        from pages import 5_‡§Æ‡•Ä‡§ü‡§ø‡§Ç‡§ó
        5_‡§Æ‡•Ä‡§ü‡§ø‡§Ç‡§ó.app()
    elif selected == "‡§ú‡•Å‡§≤‡•á‡§¨‡•Ä":
        from pages import 6_‡§ú‡•Å‡§≤‡•á‡§¨‡•Ä
        6_‡§ú‡•Å‡§≤‡•á‡§¨‡•Ä.app()
    elif selected == "‡§Ö‡§π‡§µ‡§æ‡§≤":
        from pages import 7_‡§Ö‡§π‡§µ‡§æ‡§≤
        7_‡§Ö‡§π‡§µ‡§æ‡§≤.app()
